Abdullah Al Mamun
Collaborator: Shuyang Liu
CSC 254
Project 1: Comparing Languages
Github Directory: https://github.com/moon05/Comparing-Languages

For this project I worked on Python, Ruby and C#. There are 4 files in the directory that I submitted:
prime.cs, primecaml.ml, primepartitions.py, prime.adb and program.rb. These are for C#, OCaml, Python,
Ada and Ruby respectively.
To run .cs file:
	1. mcs prime.cs
	2. mono prime.exe <integer argument>
To run .py file:
	1. python primepartitions.cs <integer argument>
To run .rb file:
	1. ruby Program.rb <integer argument>

I mainly worked on the Python, a version of C# (prime.cs and partitions.cs) and a version of Ruby
(not in this directory).
In python, I have used a function called primesUnderInt which takes in a integer and outputs a list
of primes under that number. And then I pass it to a function called primePartitions which takes in
a number, the prime list generated by primesUnderInt, 0 and an empty list. Inside the function is
recursively called to generate the list of primes that add up to the given number.

In the C# version, I have done pretty much the same thing. In the partition.cs file I did a mistake 
just before the recursion part hence it was a little buggy. But I fixed it in prime.cs
This was my first time working with C# and it was indeed very interesting. The different data types 
available, similarity with Java syntax, similarity with Python features were really helpful and it 
made the transition very easy.
